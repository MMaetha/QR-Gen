{"version":3,"sources":["utils/data.js","utils/image.js","App.js","index.js"],"names":["getDefaultData","dataFields","data","forEach","dataField","URLSearchParams","window","location","search","get","getDefaultDataByQS","localStorage","getItem","getDefaultDataByLocalStorage","updateQS","cleanData","safeData","Object","assign","keys","key","cleanUpData","history","pushState","concat","qs","stringify","loadDataUrlFromImage","_x","_loadDataUrlFromImage","apply","this","arguments","_callee","imageUrl","res","blob","imageData","regenerator_default","a","wrap","_context","prev","next","abrupt","fetch","sent","Promise","resolve","reader","FileReader","onload","result","readAsDataURL","stop","App","state","text","title","textAsTitle","onChange","_ref","_ref$target","target","value","name","_this","setState","defineProperty","onChecked","_ref2","_ref2$target","checked","updateTitle","context","qr","getContext","font","fillStyle","textAlign","fillText","width","height","updateDefaultData","prevProps","prevState","updateTitleAsText","updateData","updateQr","defaultState","setItem","_this$state","prevText","prevTextAsTitle","logo","src","logoSize","borderSize","QrCodeWithLogo","toCanvas","canvas","content","download","downloadName","then","_this2","_this$state3","react_default","createElement","style","display","justifyContent","alignItems","minHeight","background","padding","card","maxWidth","row","col","span","ref","e","crossOrigin","flexDirection","input","placeholder","marginBottom","es_checkbox","href","es_button","type","icon","size","onClick","image","dataUrl","toDataURL","replace","setAttribute","downloadImage","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c0d1f293.chunk.js","sourcesContent":["import qs from 'qs'\n\nexport function getDefaultData(dataFields) {\n    const data = {}\n    dataFields.forEach(dataField => data[dataField] = getDefaultDataByQS(dataField) || getDefaultDataByLocalStorage(dataField) || '')\n    return data\n}\n\nexport function getDefaultDataByQS(dataField) {\n    const urlParams = new URLSearchParams(window.location.search)\n    return urlParams.get(dataField)\n}\n\nexport function getDefaultDataByLocalStorage(dataField) {\n    return localStorage.getItem(dataField)\n}\n\nexport function updateLocalStorage(data) {\n    Object.keys(data).forEach(key => localStorage.setItem(key, data[key]))\n}\n\nexport function updateQS(data) {\n    const cleanData = cleanUpData(data)\n    window.history.pushState(null, '', `?${qs.stringify(cleanData)}`)\n}\n\nexport function cleanUpData(data) {\n    const safeData = Object.assign(data, {})\n    Object.keys(safeData).forEach(key => {\n        if (!safeData[key]) {\n          delete safeData[key];\n        }\n    })\n    return safeData\n}\n","export async function loadDataUrlFromImage(imageUrl) {\n    if (!imageUrl) return\n    const res = await fetch(imageUrl)\n    if (!res.blob) return\n    const blob = await res.blob()\n    const imageData = await new Promise(resolve => {\n        const reader = new FileReader()\n        reader.onload = () => resolve(reader.result)\n        reader.readAsDataURL(blob)\n    })\n    return imageData\n}\n\nexport function downloadImage(image, download) {\n    if (!image || !download) return\n    const dataUrl = image.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\")\n    download.setAttribute('href', dataUrl)\n}\n","import 'antd/dist/antd.css'\n\nimport { Card, Col, Input, Row, Button, Checkbox } from 'antd'\nimport React, { Component } from 'react'\nimport { getDefaultData, updateQS, updateLocalStorage } from 'utils/data'\nimport { loadDataUrlFromImage, downloadImage } from 'utils/image'\n\nimport QrCodeWithLogo from 'qr-code-with-logo'\n\nclass App extends Component {\n\tstate = {\n\t\timageUrl: '',\n\t\ttext: '',\n\t\ttitle: '',\n\t\ttextAsTitle: false,\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateDefaultData()\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tthis.updateTitleAsText(prevState)\n\t\tthis.updateData()\n\t\tthis.updateQr()\n\t}\n\n\tupdateDefaultData() {\n\t\tconst defaultState = getDefaultData(['imageUrl', 'text', 'title'])\n\t\tthis.setState(defaultState)\n\t}\n\n\tonChange = ({ target: { value, name }}) => {\n\t\tthis.setState({ [name] : value })\n\t}\n\n\tonChecked = ({ target: { checked, name }}) => {\n\t\tthis.setState({ [name] : checked })\n\t}\n\n\tupdateData() {\n\t\tupdateQS(this.state)\n\t\tupdateLocalStorage(this.state)\n\t}\n\n\tupdateTitleAsText(prevState) {\n\t\tconst { textAsTitle, text } = this.state\n\t\tconst { text: prevText, textAsTitle: prevTextAsTitle } = prevState\n\t\tconst shouldUpdate = text !== prevText || textAsTitle !== prevTextAsTitle\n\t\tif (shouldUpdate && textAsTitle) {\n\t\t\tthis.setState({\n\t\t\t\ttitle: text,\n\t\t\t})\n\t\t}\n\t}\n\n\tasync updateQr() {\n\t\tconst { imageUrl, text } = this.state\n\t\tlet imageData = await loadDataUrlFromImage(imageUrl)\n\t\tconst logo = imageData ? {\n\t\t\tsrc: imageData,\n\t\t} : {\n\t\t\tlogoSize: 0,\n\t\t\tborderSize: 0,\n\t\t}\n\t\ttext && QrCodeWithLogo.toCanvas({\n\t\t\tcanvas: this.qr,\n\t\t\twidth: 480,\n\t\t\tcontent: text,\n\t\t\tdownload: true,\n\t\t\tdownloadName: `${text}.png`,\n\t\t\tlogo: logo,\n\t\t}).then(this.updateTitle)\n\t}\n\n\tupdateTitle = () => {\n\t\tconst { title } = this.state\n\t\tconst context = this.qr.getContext('2d')\n\t\tcontext.font = '14px Kanit'\n\t\tcontext.fillStyle = 'black'\n\t\tcontext.textAlign = 'center'\n\t\tcontext.fillText(title || '', this.qr.width/2, this.qr.height)\n\t}\n\n  \trender() {\n\t\tconst { imageUrl, text, title } = this.state\n    \treturn (\n\t\t\t<div style={{\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\talignItems: 'center', \n\t\t\t\t\twidth: '100%',\n\t\t\t\t\tminHeight: '100vh',\n\t\t\t\t\tbackground: 'gray',\n\t\t\t\t\tpadding: '24px 0',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Card style={{\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\tmaxWidth: 900,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col span={24} style={{ display: 'flex', justifyContent: 'center', padding: 16 }}>\n\t\t\t\t\t\t\t<canvas\n\t\t\t\t\t\t\t\tref={e => this.qr = e}\n\t\t\t\t\t\t\t\tcrossOrigin=\"Anonymous\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\twidth: 480,\n\t\t\t\t\t\t\t\t\theight: 480,\n\t\t\t\t\t\t\t\t\tbackground: 'gray',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col span={24}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tpadding: 16,\n\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tname=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"Text / Url\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tmarginBottom: 16\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\tvalue={text}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tname=\"imageUrl\"\n\t\t\t\t\t\t\t\tplaceholder=\"Logo Url\"\n\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\tvalue={imageUrl}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tmarginBottom: 16\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\t\tplaceholder=\"Title (optional)\"\n\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\tvalue={title}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tmarginBottom: 16\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\tname=\"textAsTitle\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tmarginBottom: 16\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonChange={this.onChecked}\n\t\t\t\t\t\t\t>Use Text as Title</Checkbox>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tref={e => this.download = e}\n\t\t\t\t\t\t\t\tdownload={`${text}.png`}\n\t\t\t\t\t\t\t\thref=\"/\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Button\t\n\t\t\t\t\t\t\t\t\ttype=\"primary\"\t\n\t\t\t\t\t\t\t\t\ticon=\"download\"\t\n\t\t\t\t\t\t\t\t\tsize=\"large\"\t\n\t\t\t\t\t\t\t\t\tstyle={{\t\n\t\t\t\t\t\t\t\t\t\twidth: '100%',\t\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonClick={() => downloadImage(this.qr, this.download)}\n\t\t\t\t\t\t\t\t>\t\n\t\t\t\t\t\t\t\t\tDownload\t\n\t\t\t\t\t\t\t\t</Button>\t\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<span>Powered by ReiiYuki on <a href=\"https://github.com/ReiiYuki/QR-Gen\">https://github.com/ReiiYuki/QR-Gen</a></span>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Card>\n\t\t\t</div>\n    \t);\n  \t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}